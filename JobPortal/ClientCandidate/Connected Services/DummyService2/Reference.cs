//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientCandidate.DummyService2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Job", Namespace="http://schemas.datacontract.org/2004/07/JobPortal")]
    [System.SerializableAttribute()]
    public partial class Job : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Experience {
            get {
                return this.ExperienceField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperienceField, value) != true)) {
                    this.ExperienceField = value;
                    this.RaisePropertyChanged("Experience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNoField, value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DummyService2.IJobService")]
    public interface IJobService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/GetAllJobs", ReplyAction="http://tempuri.org/IJobService/GetAllJobsResponse")]
        ClientCandidate.DummyService2.Job[] GetAllJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/GetAllJobs", ReplyAction="http://tempuri.org/IJobService/GetAllJobsResponse")]
        System.Threading.Tasks.Task<ClientCandidate.DummyService2.Job[]> GetAllJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/GetJob", ReplyAction="http://tempuri.org/IJobService/GetJobResponse")]
        ClientCandidate.DummyService2.Job GetJob(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/GetJob", ReplyAction="http://tempuri.org/IJobService/GetJobResponse")]
        System.Threading.Tasks.Task<ClientCandidate.DummyService2.Job> GetJobAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/AddJob", ReplyAction="http://tempuri.org/IJobService/AddJobResponse")]
        ClientCandidate.DummyService2.Job AddJob(ClientCandidate.DummyService2.Job job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/AddJob", ReplyAction="http://tempuri.org/IJobService/AddJobResponse")]
        System.Threading.Tasks.Task<ClientCandidate.DummyService2.Job> AddJobAsync(ClientCandidate.DummyService2.Job job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/RemoveJob", ReplyAction="http://tempuri.org/IJobService/RemoveJobResponse")]
        ClientCandidate.DummyService2.Job RemoveJob(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/RemoveJob", ReplyAction="http://tempuri.org/IJobService/RemoveJobResponse")]
        System.Threading.Tasks.Task<ClientCandidate.DummyService2.Job> RemoveJobAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/UpdateJob", ReplyAction="http://tempuri.org/IJobService/UpdateJobResponse")]
        ClientCandidate.DummyService2.Job UpdateJob(ClientCandidate.DummyService2.Job job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/UpdateJob", ReplyAction="http://tempuri.org/IJobService/UpdateJobResponse")]
        System.Threading.Tasks.Task<ClientCandidate.DummyService2.Job> UpdateJobAsync(ClientCandidate.DummyService2.Job job);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobServiceChannel : ClientCandidate.DummyService2.IJobService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobServiceClient : System.ServiceModel.ClientBase<ClientCandidate.DummyService2.IJobService>, ClientCandidate.DummyService2.IJobService {
        
        public JobServiceClient() {
        }
        
        public JobServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientCandidate.DummyService2.Job[] GetAllJobs() {
            return base.Channel.GetAllJobs();
        }
        
        public System.Threading.Tasks.Task<ClientCandidate.DummyService2.Job[]> GetAllJobsAsync() {
            return base.Channel.GetAllJobsAsync();
        }
        
        public ClientCandidate.DummyService2.Job GetJob(int id) {
            return base.Channel.GetJob(id);
        }
        
        public System.Threading.Tasks.Task<ClientCandidate.DummyService2.Job> GetJobAsync(int id) {
            return base.Channel.GetJobAsync(id);
        }
        
        public ClientCandidate.DummyService2.Job AddJob(ClientCandidate.DummyService2.Job job) {
            return base.Channel.AddJob(job);
        }
        
        public System.Threading.Tasks.Task<ClientCandidate.DummyService2.Job> AddJobAsync(ClientCandidate.DummyService2.Job job) {
            return base.Channel.AddJobAsync(job);
        }
        
        public ClientCandidate.DummyService2.Job RemoveJob(int id) {
            return base.Channel.RemoveJob(id);
        }
        
        public System.Threading.Tasks.Task<ClientCandidate.DummyService2.Job> RemoveJobAsync(int id) {
            return base.Channel.RemoveJobAsync(id);
        }
        
        public ClientCandidate.DummyService2.Job UpdateJob(ClientCandidate.DummyService2.Job job) {
            return base.Channel.UpdateJob(job);
        }
        
        public System.Threading.Tasks.Task<ClientCandidate.DummyService2.Job> UpdateJobAsync(ClientCandidate.DummyService2.Job job) {
            return base.Channel.UpdateJobAsync(job);
        }
    }
}
